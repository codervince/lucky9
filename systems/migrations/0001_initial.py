# -*- coding: utf-8 -*-
# Generated by Django 1.9.3 on 2016-03-10 03:37
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Fund',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('code', models.CharField(max_length=30, unique=True)),
                ('minimuminvestment', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.CharField(max_length=250)),
                ('longdescription', models.TextField()),
                ('managementfee', models.FloatField()),
                ('performancefee', models.FloatField()),
                ('bailoutfee', models.FloatField()),
                ('bettingratio', models.FloatField()),
                ('sharespurchased', models.SmallIntegerField()),
                ('initalshareissue', models.SmallIntegerField()),
                ('costpershare', models.DecimalField(decimal_places=2, max_digits=7)),
                ('currency', models.CharField(choices=[('AUD', 'AUD'), ('GBP', 'GBP')], default='GBP', max_length=10)),
                ('openingbank', models.DecimalField(decimal_places=2, max_digits=7)),
                ('currentbank', models.DecimalField(decimal_places=2, max_digits=7)),
                ('currentprofit', models.DecimalField(decimal_places=2, max_digits=7)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('-currentprofit',),
            },
        ),
        migrations.CreateModel(
            name='Investment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startdate', models.DateTimeField(default=django.utils.timezone.now)),
                ('noshares', models.FloatField()),
                ('initialcost', models.FloatField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('maturitydate', models.DateTimeField()),
                ('isActive', models.BooleanField()),
                ('fund', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='systems.Fund')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QueryClause',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.SmallIntegerField()),
                ('item', models.CharField(max_length=150)),
                ('operator', models.CharField(choices=[('=', '='), ('>', '>'), ('>=', '>='), ('<', '<'), ('<=', '<='), ('BETWEEN', 'BETWEEN'), ('!=', '!='), ('NOT BETWEEN', 'NOT BETWEEN')], max_length=15)),
                ('value', models.CharField(max_length=100)),
                ('join', models.CharField(choices=[('AND', 'AND'), ('AND(', 'AND('), ('OR', 'OR'), ('OR(', 'OR('), (')AND', ')AND'), (')OR', ')OR')], default='AND', max_length=15)),
            ],
            options={
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='Runner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('runtype', models.CharField(default='HISTORICAL', max_length=12)),
                ('racedate', models.DateField()),
                ('racecoursename', models.CharField(max_length=10)),
                ('racecourseid', models.SmallIntegerField()),
                ('racename', models.CharField(max_length=250)),
                ('racetypehorse', models.CharField(max_length=10)),
                ('racetypeconditions', models.CharField(max_length=10)),
                ('racetypehs', models.CharField(max_length=10)),
                ('ages', models.CharField(max_length=10)),
                ('raceclass', models.CharField(max_length=10)),
                ('distance', models.CharField(max_length=10)),
                ('going', models.CharField(max_length=10)),
                ('runners', models.SmallIntegerField()),
                ('horsename', models.CharField(max_length=250)),
                ('sirename', models.CharField(max_length=250)),
                ('trainername', models.CharField(max_length=250)),
                ('jockeyname', models.CharField(max_length=250)),
                ('allowance', models.SmallIntegerField()),
                ('FINALPOS', models.CharField(max_length=5)),
                ('lbw', models.FloatField()),
                ('winsp', models.FloatField()),
                ('winsppos', models.SmallIntegerField()),
                ('bfsp', models.DecimalField(decimal_places=2, max_digits=6)),
                ('bfpsp', models.DecimalField(decimal_places=2, max_digits=6)),
                ('ratingrank', models.SmallIntegerField()),
                ('rating', models.FloatField()),
                ('raceno', models.CharField(max_length=250)),
                ('draw', models.SmallIntegerField()),
                ('damname', models.CharField(max_length=250)),
                ('damsirename', models.CharField(max_length=250)),
                ('racetime', models.CharField(max_length=250)),
                ('totalruns', models.SmallIntegerField()),
                ('placed', models.BooleanField()),
                ('bfplaced', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Snapshot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bfwins', models.SmallIntegerField()),
                ('bfruns', models.SmallIntegerField()),
                ('bfwinpc', models.FloatField()),
                ('expectedwins', models.FloatField()),
                ('a_e', models.FloatField()),
                ('winsr', models.FloatField()),
                ('levelbspprofit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('levelbsprofitpc', models.FloatField()),
                ('a_e_last50', models.FloatField()),
                ('archie_allruns', models.FloatField()),
                ('expected_last50', models.FloatField()),
                ('archie_last50', models.FloatField()),
                ('last50wins', models.SmallIntegerField()),
                ('last50pc', models.FloatField()),
                ('last50str', models.CharField(max_length=250)),
                ('last28daysruns', models.SmallIntegerField()),
                ('profit_last50', models.DecimalField(decimal_places=2, max_digits=10)),
                ('longest_losing_streak', models.SmallIntegerField()),
                ('average_losing_streak', models.FloatField()),
                ('average_winning_streak', models.FloatField()),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('a_e', 'winsr'),
            },
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('systemname', models.CharField(max_length=250)),
                ('snapshotid', models.SmallIntegerField(unique=True)),
                ('description', models.CharField(max_length=250)),
                ('isActive', models.BooleanField(default=True)),
                ('isTurf', models.BooleanField()),
                ('exposure', django.contrib.postgres.fields.jsonb.JSONField()),
                ('query', django.contrib.postgres.fields.jsonb.JSONField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('funds', models.ManyToManyField(to='systems.Fund')),
            ],
            options={
                'ordering': ('snapshotid',),
            },
        ),
        migrations.CreateModel(
            name='FundSnapshot',
            fields=[
                ('snapshot_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='systems.Snapshot')),
                ('string_last500', models.CharField(max_length=250)),
            ],
            options={
                'abstract': False,
            },
            bases=('systems.snapshot',),
        ),
        migrations.CreateModel(
            name='SystemSnapshot',
            fields=[
                ('snapshot_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='systems.Snapshot')),
                ('query', models.TextField()),
                ('red_rows_ct', models.SmallIntegerField()),
                ('blue_rows_ct', models.SmallIntegerField()),
                ('green_rows_ct', models.SmallIntegerField()),
                ('total_rows_ct', models.SmallIntegerField()),
                ('red_rows_pc', models.FloatField()),
                ('blue_rows_pc', models.FloatField()),
                ('green_rows_pc', models.FloatField()),
                ('individualrunners', models.SmallIntegerField()),
                ('uniquewinners', models.SmallIntegerField()),
                ('uniquewinnerstorunnerspc', models.FloatField()),
                ('yearstats', django.contrib.postgres.fields.jsonb.JSONField()),
                ('yearcolorcounts', django.contrib.postgres.fields.jsonb.JSONField()),
                ('totalbackyears', models.SmallIntegerField()),
                ('system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='snapshot', to='systems.System')),
            ],
            options={
                'abstract': False,
            },
            bases=('systems.snapshot',),
        ),
        migrations.AddField(
            model_name='snapshot',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_systems.snapshot_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='snapshot',
            name='runners',
            field=models.ManyToManyField(to='systems.Runner'),
        ),
        migrations.AddField(
            model_name='queryclause',
            name='snapshots',
            field=models.ManyToManyField(to='systems.Snapshot'),
        ),
        migrations.AddField(
            model_name='fund',
            name='investors',
            field=models.ManyToManyField(through='systems.Investment', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='fundsnapshot',
            name='fund',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='snapshot', to='systems.Fund'),
        ),
    ]
