# -*- coding: utf-8 -*-
# Generated by Django 1.9.3 on 2016-03-17 07:28
from __future__ import unicode_literals

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Fund',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='fund name', max_length=250)),
                ('code', models.CharField(max_length=30, unique=True)),
                ('description', models.TextField(help_text='logical reasoning')),
                ('isActive', models.BooleanField(default=True, help_text='active?')),
                ('managementfee', models.FloatField(help_text='monthly active management fee %')),
                ('performancethreshold', models.FloatField(help_text='at what rate of return peformance fee starts')),
                ('performancefee', models.FloatField(help_text='fee for excessive performance')),
                ('bailoutfee', models.FloatField(help_text='exit at end of month fee %')),
                ('bettingratio', models.FloatField(help_text='default bet/bank ratio %')),
                ('sharespurchased', models.SmallIntegerField(help_text='shares you purchased')),
                ('initalshareissue', models.SmallIntegerField(help_text='total initial share issue')),
                ('intialpricepershare', models.DecimalField(decimal_places=2, help_text='initial share price', max_digits=7)),
                ('currentpricepershare', models.DecimalField(decimal_places=2, help_text='current share price', max_digits=7)),
                ('currency', models.CharField(choices=[('AUD', 'AUD'), ('GBP', 'GBP')], default='GBP', help_text='fund base currency', max_length=10)),
                ('openingbank', models.DecimalField(decimal_places=2, help_text='opening bank in currency', max_digits=7)),
                ('currentbalance', models.DecimalField(decimal_places=2, help_text='current bank %', max_digits=7)),
                ('liveroi', models.FloatField(help_text='current ROI since live')),
                ('livesince', models.DateTimeField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('-liveroi',),
            },
        ),
        migrations.CreateModel(
            name='FundSnapshot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('snapshotdate', models.DateTimeField()),
                ('stats', django.contrib.postgres.fields.jsonb.JSONField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('fund', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fundsnapshot', to='systems.Fund')),
            ],
            options={
                'ordering': ('-snapshotdate',),
            },
        ),
        migrations.CreateModel(
            name='Runner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('runtype', models.CharField(default='HISTORICAL', help_text='live_or_historical', max_length=12)),
                ('racedate', models.DateField(help_text='race date')),
                ('racecoursename', models.CharField(help_text='racecourse', max_length=10)),
                ('racecourseid', models.SmallIntegerField(help_text='racecouseid')),
                ('racename', models.CharField(help_text='race name', max_length=250)),
                ('racetypehorse', models.CharField(help_text='entry type horse', max_length=10)),
                ('racetypeconditions', models.CharField(help_text='entry conditions', max_length=10)),
                ('racetypehs', models.CharField(help_text='handicap or stakes', max_length=10)),
                ('ages', models.CharField(help_text='entry type ages', max_length=10)),
                ('oldraceclass', models.CharField(help_text='old raceclass', max_length=10)),
                ('newraceclass', models.CharField(help_text='new raceclass', max_length=10)),
                ('distance', models.FloatField(help_text='distance furlongs', max_length=10)),
                ('going', models.CharField(help_text='going', max_length=10)),
                ('norunners', models.SmallIntegerField(help_text='number of runners')),
                ('horsename', models.CharField(help_text='horse name', max_length=250)),
                ('sirename', models.CharField(help_text='sire name', max_length=250)),
                ('trainername', models.CharField(help_text='trainer', max_length=250)),
                ('jockeyname', models.CharField(help_text='jockey', max_length=250)),
                ('allowance', models.SmallIntegerField(help_text='jockey allowance')),
                ('FINALPOS', models.CharField(help_text='Final position', max_length=5)),
                ('lbw', models.FloatField(help_text='Beaten by L')),
                ('winsp', models.FloatField(help_text='final starting price win')),
                ('winsppos', models.SmallIntegerField(help_text='rank final starting price')),
                ('bfsp', models.DecimalField(decimal_places=2, help_text='Betfair SP win', max_digits=6)),
                ('bfpsp', models.DecimalField(decimal_places=2, help_text='Betfair SP place', max_digits=6)),
                ('fsratingrank', models.SmallIntegerField(help_text='FS Rating rank')),
                ('fsrating', models.FloatField(help_text='FS Rating')),
                ('fsraceno', models.CharField(help_text='distance', max_length=250, unique=True)),
                ('draw', models.SmallIntegerField(help_text='barrier')),
                ('damname', models.CharField(help_text="Dam's name", max_length=250)),
                ('damsirename', models.CharField(help_text="Dam's sire name", max_length=250)),
                ('racetime', models.CharField(help_text='Race off time', max_length=250)),
                ('totalruns', models.SmallIntegerField(help_text='total runs horse')),
                ('isPlaced', models.BooleanField(help_text='Placed?')),
                ('isBFplaced', models.BooleanField(help_text='is Placed on Betfair?')),
                ('stats', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
            options={
                'ordering': ('-racedate',),
            },
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('systemtype', models.CharField(choices=[('tg', 'Trainglot'), ('mt', 'Metainvest'), ('custom', 'Custom'), ('other', 'Other')], default='tg', help_text='type: ', max_length=10)),
                ('systemname', models.CharField(help_text='system name', max_length=10)),
                ('snapshotid', models.SmallIntegerField(unique=True)),
                ('description', models.TextField(help_text='rationale')),
                ('isActive', models.BooleanField(default=True, help_text='active?')),
                ('isTurf', models.BooleanField(default=True, help_text='turf only?')),
                ('exposure', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), help_text='parameters exposed to', size=None)),
                ('query', django.contrib.postgres.fields.jsonb.JSONField(help_text='FS query params')),
                ('rpquery', django.contrib.postgres.fields.jsonb.JSONField(help_text='equivalent RP query params')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('snapshotid',),
            },
        ),
        migrations.CreateModel(
            name='SystemSnapshot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('snapshotdate', models.DateTimeField()),
                ('bluerows', django.contrib.postgres.fields.jsonb.JSONField()),
                ('greenrows', django.contrib.postgres.fields.jsonb.JSONField()),
                ('redrows', django.contrib.postgres.fields.jsonb.JSONField()),
                ('yearcolorcounts', django.contrib.postgres.fields.jsonb.JSONField()),
                ('yearstats', django.contrib.postgres.fields.jsonb.JSONField()),
                ('stats', django.contrib.postgres.fields.jsonb.JSONField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('runners', models.ManyToManyField(to='systems.Runner')),
                ('system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='systemsnapshot', to='systems.System')),
            ],
            options={
                'ordering': ('-snapshotdate',),
            },
        ),
        migrations.AlterUniqueTogether(
            name='runner',
            unique_together=set([('racedate', 'horsename')]),
        ),
        migrations.AddField(
            model_name='fund',
            name='systems',
            field=models.ManyToManyField(to='systems.System'),
        ),
    ]
